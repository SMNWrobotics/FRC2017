// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1982.Robot2017.commands;
import edu.wpi.first.wpilibj.command.Command;

import org.frc1982.common.vision.CameraView;
import org.usfirst.frc1982.Robot2017.Robot;
import org.usfirst.frc1982.Robot2017.RobotMap;

/**
 *
 */
public class _CameraCenter extends Command {

	private static final double maxX = 1.10;
	private static final double minX = 0.90;
	
	private CameraView camView;
	private double targx;
	
	public _CameraCenter(CameraView camView) {
		this.camView = camView;
		
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	targx = CameraView.iRes.getWidth() / 2;
    	System.out.println( "Target X value: " + targx );
    	currentX = 0.0;
    }
    
    private double currentX = 0.0;
    
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	currentX = camView.getCenterX();
    	System.out.println(currentX);
    	double dif = currentX / targx;
    	if ( dif > maxX || dif < minX ) {
    		if ( currentX > targx ) {
    			//turn left
    			System.out.println("turn left");
//    			RobotMap.driveDriveTrain.mecanumDrive_Cartesian(0, 0, 0.2, 0);
    			Robot.driver.setMotorsMecanum(0,0,0.2);
    		} else if ( currentX < targx ) {
    			//turn right
    			System.out.println("turn right");
//    			RobotMap.driveDriveTrain.mecanumDrive_Cartesian(0, 0, -0.2, 0);
    			Robot.driver.setMotorsMecanum(0,0,-0.2);
    		}
    	} else {
//    		RobotMap.driveDriveTrain.mecanumDrive_Cartesian(0, 0.2, 0, 0);
    		Robot.driver.setMotorsMecanum(0,0.2,0);
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
//    	if ( currentX < 0 ) {
//    		return false;
//    	}
//    	double dif = currentX / targx;
//    	if ( dif < maxX && dif > minX ) {
//    		return true;
//    	}
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	
    }
}
